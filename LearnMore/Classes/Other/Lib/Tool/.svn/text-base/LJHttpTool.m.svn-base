//
//  LJHotline.h
//  无线长春
//
//  Created by 刘建 on 14-10-21.
//  Copyright (c) 2014年 liujian. All rights reserved.
//


#import "LJHttpTool.h"
#import "AFNetworking.h"
#import <SystemConfiguration/SystemConfiguration.h>


@implementation LJHttpTool

/**
 *  发送post请求
 *
 *  @param url        url请求地址
 *  @param parameters 请求参数
 *  @param success    请求成功
 *  @param failure    请求失败
 */
+(void)postWithUrl:(NSString *)url parameters:(NSDictionary *)parameters success:(successBlock)success failure:(failureBlock)failure{
    //1.创建网络请求管理
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    //2.发送网络请求数据
    [manager POST:url parameters:parameters success:^(AFHTTPRequestOperation *operation, id responseObject) {
        //请求成功
        if (success) {
            success(responseObject);
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        //请求失败
        if (failure) {
            failure(error);
        }
    }];
}

/**
 *  发送get请求
 *
 *  @param url        url请求地址
 *  @param parameters 请求参数
 *  @param success    请求成功
 *  @param failure    请求失败
 */
+(void)getWithUrl:(NSString *)url parameters:(NSDictionary *)parameters success:(successBlock)success failure:(failureBlock)failure{
    //1.创建网络请求管理
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    
    [manager GET:url parameters:parameters success:^(AFHTTPRequestOperation *operation, id responseObject) {
        //请求成功
        if (success) {
            success(responseObject);
        }
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        //请求失败
        if (failure) {
            failure(error);
        }
    }];
}

/**
 *  -判断当前网络是否可用
 *
 *  @return 返回true or false
 */
+(BOOL) isNetworkEnabled
{
    
    BOOL bEnabled = FALSE;
//    NSString *url = @"http://219.141.189.60:8080/ctwifi-api/hotline/list";
    NSString *url = @"http://www.m.baidu.com/";
    SCNetworkReachabilityRef ref = SCNetworkReachabilityCreateWithName(NULL, [url UTF8String]);
    SCNetworkReachabilityFlags flags;
    
    bEnabled = SCNetworkReachabilityGetFlags(ref, &flags);
    
    CFRelease(ref);
    if (bEnabled) {
        //        kSCNetworkReachabilityFlagsReachable：能够连接网络
        //        kSCNetworkReachabilityFlagsConnectionRequired：能够连接网络，但是首先得建立连接过程
        //        kSCNetworkReachabilityFlagsIsWWAN：判断是否通过蜂窝网覆盖的连接，比如EDGE，GPRS或者目前的3G.主要是区别通过WiFi的连接。
        BOOL flagsReachable = ((flags & kSCNetworkFlagsReachable) != 0);
        BOOL connectionRequired = ((flags & kSCNetworkFlagsConnectionRequired) != 0);
        BOOL nonWiFi = flags & kSCNetworkReachabilityFlagsTransientConnection;
        bEnabled = ((flagsReachable && !connectionRequired) || nonWiFi) ? TRUE : FALSE;
//        bEnabled = ((flagsReachable && connectionRequired) && nonWiFi) ? TRUE : FALSE;
    }
    
    return !bEnabled;
}

+(BOOL)isNetworkReachable{
    // Create zero addy
    struct sockaddr_in zeroAddress;
    
    bzero(&zeroAddress, sizeof(zeroAddress));
    zeroAddress.sin_len = sizeof(zeroAddress);
    zeroAddress.sin_family = AF_INET;
    
    // Recover reachability flags
    SCNetworkReachabilityRef defaultRouteReachability = SCNetworkReachabilityCreateWithAddress(NULL, (struct sockaddr *)&zeroAddress);
    SCNetworkReachabilityFlags flags;
    BOOL didRetrieveFlags = SCNetworkReachabilityGetFlags(defaultRouteReachability, &flags);
    CFRelease(defaultRouteReachability);
    if (!didRetrieveFlags){
        return NO;
    }
    BOOL isReachable = flags & kSCNetworkFlagsReachable;
    BOOL needsConnection = flags & kSCNetworkFlagsConnectionRequired;
    return (isReachable && !needsConnection) ? YES : NO;
}

-(void)fsafda{
//    Reachability *r = [Reachability reachabilityWithHostName:@"www.apple.com"];
//    switch ([r currentReachabilityStatus]) {
//        case NotReachable:
//            // 没有网络连接
//            NSLog(@"没有网络");
//            
//            break;
//        case ReachableViaWWAN:
//            // 使用3G网络
//            NSLog(@"正在使用3G网络");
//            break;
//        case ReachableViaWiFi:
//            // 使用WiFi网络
//            NSLog(@"正在使用wifi网络");
//            break;
//    }
}

@end
